import { Modal, Popover } from 'bootstrap';
import * as C from '../config';
import {
  addBlockOverlays,
  removeOverlays,
  toggleIcon,
} from '../ui/checkBlockedDays';
import {
  getLocalStorageItem,
  setLocalStorageItem,
} from '../utils/localStorageUtils';
import {
  convertToISODate,
  formatDate,
  formatDayNameDate,
} from '../utils/mainGlobFunctions';
import { Calendar, EventApi } from '@fullcalendar/core';
import { generateDaysCheckboxes } from './generateDaysCheckboxes';
import { getDatesInRange } from '../utils/datesUtils';
import { approveAndLockAction } from './approveAndLockAction';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–∞—Ç —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏.
 */
interface UniqueDate {
  date: Date;
  events?: EventApi[];
}

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–∞—Ç.
 */
interface UniqueDates {
  [key: string]: UniqueDate;
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ObjID –ø–æ –¥–∞—Ç–µ.
 * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤–∞—à–µ–π –ª–æ–≥–∏–∫–æ–π.
 * @param date - –î–∞—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å ObjID.
 * @returns ObjID –∏–ª–∏ undefined, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.
 */
function getObjIDByDate(date: Date): string | undefined {
  const formattedDate = formatDate(date);
  const parentIdDataArr =
    getLocalStorageItem('parentIdDataArr') || [];

  for (const obj of parentIdDataArr) {
    const key = Object.keys(obj)[0];
    const objDate = obj[key];
    if (objDate === formattedDate) {
      return key;
    }
  }
  return undefined;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç –∏–∑ —á–µ–∫–±–æ–∫—Å–æ–≤.
 * @returns –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç (—Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD).
 */
const getSelectedDates = (): string[] => {
  const checkboxes = document.querySelectorAll<HTMLInputElement>(
    '.dailyBlockContainer input[type="checkbox"]:checked',
  );
  const selectedDates: string[] = [];
  console.log("üöÄ ~ getSelectedDates ~ selectedDates:", selectedDates)
  checkboxes.forEach((checkbox) => {
    selectedDates.push(checkbox.value);
  });
    console.log("üöÄ ~ checkboxes.forEach ~ selectedDates:", selectedDates)
  return selectedDates;
};


/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ ObjID –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç.
 * @param selectedDates - –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç (—Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD).
 console.log("üöÄ ~ selectedDates:", selectedDates)
 * @returns –ú–∞—Å—Å–∏–≤ ObjID.
 */
const getSelectedObjIDs = (selectedDates: string[]): string[] => {
  console.log("üöÄ ~ getSelectedObjIDs ~ selectedDates:", selectedDates)
  const parentIdDataArr =
    getLocalStorageItem('parentIdDataArr') || [];
  const selectedObjIDs: string[] = [];

  selectedDates.forEach((dateStr) => {
    console.log("üöÄ ~ selectedDates.forEach ~ selectedDates:", selectedDates)
    const obj = parentIdDataArr.find(
      (obj: { [key: string]: string }) => obj[Object.keys(obj)[0]] === dateStr,
    );
    if (obj) {
      const ObjID = Object.keys(obj)[0];
      selectedObjIDs.push(ObjID);
    }
  });

  return selectedObjIDs;
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –≤ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–µ.
 * @param calendar - –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è FullCalendar.
 * @param currentDays - –ú–∞—Å—Å–∏–≤ –¥–∞—Ç —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏.
 * @returns true, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –∏–Ω–∞—á–µ false.
 */
const checkUnsubmittedEvents = async (
  calendar: Calendar,
  currentDays: Date[],
): Promise<boolean> => {
  let hasUnsubmitted = false;

  const events = calendar.getEvents();

  for (const day of currentDays) {
    const eventsForDay = events.filter((event: EventApi) => {
      const eventDate = new Date(event.start!);
      return (
        eventDate.getFullYear() === day.getFullYear() &&
        eventDate.getMonth() === day.getMonth() &&
        eventDate.getDate() === day.getDate()
      );
    });

    for (const event of eventsForDay) {
      const isApproved = event.extendedProps.isApproved;
      if (isApproved === '') {
        hasUnsubmitted = true;
        break;
      }
    }

    if (hasUnsubmitted) break;
  }

  return hasUnsubmitted;
};

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ UI.
 * @param startDate - –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ–¥–µ–ª–∏.
 * @param endDate - –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ–¥–µ–ª–∏.
 */
const updateLockDatesUI = (startDate: Date, endDate: Date) => {
  endDate.setDate(endDate.getDate() - 1); // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã

  const startLockDate = document.querySelector('.startLockDate') as HTMLElement;
  const startUnlockDate = document.querySelector(
    '.startUnlockDate',
  ) as HTMLElement;
  const endLockDate = document.querySelector('.endLockDate') as HTMLElement;
  const endUnlockDate = document.querySelector('.endUnlockDate') as HTMLElement;

  const formattedStartDate = formatDate(startDate);
  const formattedEndDate = formatDate(endDate);

  startLockDate.innerText = startUnlockDate.innerText = formattedStartDate;
  endLockDate.innerText = endUnlockDate.innerText = formattedEndDate;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ObjID –∏ –¥–∞—Ç—ã –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏.
 * @param startDate - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞.
 * @param arr - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å ObjID –∏ –¥–∞—Ç–∞–º–∏.
 * @returns –û–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –¥–∞—Ç –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ ObjID.
 */
const getKeysForWeek = (
  startDate: string,
  arr: { [key: string]: string }[],
): { lockingDatesArr: string[]; weekToBlockIDs: string[] } => {
  const lockingDatesArr: string[] = [];
  const weekToBlockIDsArr: string[] = [];

  const oneWeekInMilliseconds = 7 * 24 * 60 * 60 * 1000; // 1 –Ω–µ–¥–µ–ª—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

  const startDateTime = new Date(convertToISODate(startDate)).getTime();
  const endDateTime = startDateTime + oneWeekInMilliseconds;

  for (const obj of arr) {
    const key = Object.keys(obj)[0];
    const date = obj[key];
    const dateTime = new Date(convertToISODate(date)).getTime();

    if (dateTime >= startDateTime && dateTime < endDateTime) {
      weekToBlockIDsArr.push(key);
      lockingDatesArr.push(date);
    }
  }

  return { lockingDatesArr, weekToBlockIDs: weekToBlockIDsArr };
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç.
 * @param selectedObjIDs - –ú–∞—Å—Å–∏–≤ ObjID –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
 * @param isLocked - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
 * @param modal - –≠–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞.
 */
const lockingAction = async (
  selectedObjIDs: string[],
  isLocked: boolean,
  modal: Modal,
  calendar: Calendar
) => {
  const managerName =
    getLocalStorageItem('managerName') || 'Unknown Manager';

  try {
    for (const ObjID of selectedObjIDs) {
      const formDataLocked = new FormData();
      const requestBody = JSON.stringify({
        Value: !isLocked ? managerName : '',
        UserTabID: null,
        UnitID: '',
        UnitName: '',
        isOnlyYear: false,
        OrigValue: '',
        ParamID: 9249,
        ObjID,
        InterfaceID: 1792,
        GroupID: 2720,
        ObjTypeID: 1040,
        ParrentObjHighTab: -1,
        ParamID_TH: null,
        Name_TH: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è',
        Array: 0,
      });

      formDataLocked.append('data', requestBody);

      const response = await fetch(C.srvv + C.cacheAddTable, {
        credentials: 'include',
        method: 'post',
        body: formDataLocked,
      });

      if (!response.ok) {
        throw new Error(`Failed to lock ObjID: ${ObjID}`);
      }

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ cache
      const formDataSaveCache = new FormData();
      formDataSaveCache.append('InterfaceID', '1792');
      formDataSaveCache.append('ParrentObjHighTab', '-1');
      formDataSaveCache.append('RapidCalc', '0');
      formDataSaveCache.append('Ignore39', '0');

      const cacheResponse = await fetch(C.srvv + C.cacheSaveTable, {
        credentials: 'include',
        method: 'post',
        body: formDataSaveCache,
      });

      if (!cacheResponse.ok) {
        throw new Error(`Failed to save cache for ObjID: ${ObjID}`);
      }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    let currentLockedDatesArr =
      getLocalStorageItem('lockedDatesArray') || [];
    let mergedLockedDatesArr: string[];

    if (!isLocked) {
      mergedLockedDatesArr = [...currentLockedDatesArr, ...selectedObjIDs];
    } else {
      mergedLockedDatesArr = currentLockedDatesArr.filter(
        (date: string) => !selectedObjIDs.includes(date),
      );
    }

    setLocalStorageItem('lockedDatesArray', mergedLockedDatesArr);
    setLocalStorageItem('isWeekLocked', !isLocked);

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
    if (!isLocked) {
      toggleIcon('unlock');
      addBlockOverlays();
    } else {
      toggleIcon('lock');
      removeOverlays();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫
    const lockActionBtn = document.querySelector(
      '.lock-action',
    ) as HTMLButtonElement;
    const unlockActionBtn = document.querySelector(
      '.unlock-action',
    ) as HTMLButtonElement;

    if (!isLocked) {
      lockActionBtn.textContent = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ';
      unlockActionBtn.textContent = '–î–∞';
    } else {
      unlockActionBtn.textContent = '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ';
      lockActionBtn.textContent = '–î–∞';
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏
    setTimeout(() => {
      modal.hide();
    }, 800);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ:', error);
    alert(
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
    );
  } finally {

  }
  
};



/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç popover –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π.
 * @param selector - –°–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–≤–µ—à–∏–≤–∞–µ—Ç—Å—è popover.
 * @param modal - –≠–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞.
 * @param currentDays - –ú–∞—Å—Å–∏–≤ –¥–∞—Ç —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏.
 * @param calendar - –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è FullCalendar.
 */
const setupApprovalPopover = (
  selector: string,
  modal: Modal,
  currentDays: Date[],
  calendar: Calendar,
) => {
  const popover = new Popover(selector, {
    placement: 'bottom',
    title: '–°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π?',
    html: true,
    template: `
      <div style="max-width:fit-content;" class="popover" role="tooltip">
        <div class="popover-inner">
          <div class="modal-body fs-0">
            –ï—Å—Ç—å –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏!<br>
            <b>–°–æ–≥–ª–∞—Å—É–µ—Ç–µ –ø–µ—Ä–µ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π?</b>
          </div>
          <div class="card-footer d-flex justify-content-center align-items-center bg-light p-0">
            <button type='button' class='btn btn-success m-2 yesOnPopover'>–î–∞</button>
            <button type='button' class='btn btn-success m-2 noOnPopover'>–ù–µ—Ç</button>
            <button type='button' class='btn btn-warning m-2 cancelPopover'>–û—Ç–º–µ–Ω–∞</button>
          </div>
        </div>
      </div>`,
    trigger: 'click',
    sanitize: false,
  });

  const element = document.querySelector(selector) as HTMLElement;

  element.addEventListener('shown.bs.popover', () => {
    const cancelButton = document.querySelector(
      '.cancelPopover',
    ) as HTMLButtonElement;
    const noOnPopover = document.querySelector(
      '.noOnPopover',
    ) as HTMLButtonElement;
    const yesOnPopover = document.querySelector(
      '.yesOnPopover',
    ) as HTMLButtonElement;

    cancelButton.addEventListener('click', () => {
      modal.hide();
      popover.dispose();
    });

    noOnPopover.addEventListener('click', async () => {
      modal.hide();
      popover.dispose();
      // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã –∏ ObjID
      const selectedDates = getSelectedDates();
      const selectedObjIDs = getSelectedObjIDs(selectedDates);
      console.log("üöÄ ~ noOnPopover.addEventListener ~ selectedDates:", selectedDates)
      // –í—ã–ø–æ–ª–Ω—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è
      await lockingAction(
        selectedObjIDs,
        getLocalStorageItem('isWeekLocked') ?? false,
        modal,
        calendar
      );
    });

    yesOnPopover.addEventListener('click', async () => {
      // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã –∏ ObjID
      const selectedDates = getSelectedDates();
      const selectedObjIDs = getSelectedObjIDs(selectedDates);
      // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
      await approveAndLockAction(selectedObjIDs, calendar);
      popover.dispose();
    });
  });
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç.
 * @param calendar - –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è FullCalendar.
 */
export const lockEmploynment = async (calendar: Calendar) => {
  const lockBtn = document.querySelector('.lockBtn');

  const lockAction = async () => {  
    const isLocked = getLocalStorageItem('isWeekLocked') ?? false;

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const otherUsersSelector = document.querySelector(
      '#otherUsers',
    ) as HTMLSelectElement;
    const selectedUser =
      otherUsersSelector?.selectedOptions[0]?.textContent ||
      '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    const selectedUserId = otherUsersSelector?.value || '';

    let hasUnsubmittedEvents = false;

    const lockedUserSurname = document.querySelector(
      '.lockedUserSurname',
    ) as HTMLElement;
    const unLockedUserSurname = document.querySelector(
      '.unLockedUserSurname',
    ) as HTMLElement;
    lockedUserSurname.textContent = selectedUser;
    unLockedUserSurname.textContent = selectedUser;

    const lockEmplModalEl = document.querySelector(
      '#LockEmplModal',
    ) as HTMLElement;
    const unlockEmplModalEl = document.querySelector(
      '#unLockEmplModal',
    ) as HTMLElement;
    const dailyBlockContainer = document.querySelector(
      '.dailyBlockContainer',
    ) as HTMLElement;

    const startDate = new Date(calendar.view.currentStart);
    const endDate = new Date(calendar.view.currentEnd);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞—Ç—ã —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    const currentDays = getDatesInRange(startDate, endDate);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    hasUnsubmittedEvents = await checkUnsubmittedEvents(calendar, currentDays);

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–∞—Ç —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
    generateDaysCheckboxes(dailyBlockContainer, currentDays);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å
    const modal = new Modal(isLocked ? unlockEmplModalEl : lockEmplModalEl);
    modal.show();

    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º popover –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è
    if (!isLocked && hasUnsubmittedEvents) {
      setupApprovalPopover('.lock-action', modal, currentDays, calendar);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –≤ UI
    updateLockDatesUI(startDate, endDate);

    // –ü–æ–ª—É—á–∞–µ–º ObjID –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const parentIdDataArr =
      getLocalStorageItem('parentIdDataArr') || [];
    const { lockingDatesArr, weekToBlockIDs } = getKeysForWeek(
      formatDate(startDate),
      parentIdDataArr,
    );

    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
     * @param lockingDatesArr - –ú–∞—Å—Å–∏–≤ –¥–∞—Ç –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
     * @param weekToBlockIDs - –ú–∞—Å—Å–∏–≤ ObjID –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
     * @param isLocked - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.
     * @param modal - –≠–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞.
     */
    const lockingActionHandler = async () => {
      // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã –∏ ObjID
      const selectedDates = getSelectedDates();
      const selectedObjIDs = getSelectedObjIDs(selectedDates);
      // –í—ã–ø–æ–ª–Ω—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
      await lockingAction(selectedObjIDs, isLocked, modal, calendar);
     
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    const lockActionBtn = document.querySelector(
      '.lock-action',
    ) as HTMLButtonElement;
    const unlockActionBtn = document.querySelector(
      '.unlock-action',
    ) as HTMLButtonElement;

      // Remove existing event listeners
    lockActionBtn?.removeEventListener('click', lockingActionHandler);
    unlockActionBtn?.removeEventListener('click', lockingActionHandler);

    // Add event listeners
    if (!hasUnsubmittedEvents) {
      lockActionBtn?.addEventListener('click', lockingActionHandler);
    }
    unlockActionBtn?.addEventListener('click', lockingActionHandler);
  };

  lockBtn?.removeEventListener('click', lockAction);
  lockBtn?.addEventListener('click', lockAction);
};
